{"pageProps":{"tag":{"name":"nodejs","posts":[{"filename":"a-fluttering-experience","preview":"\nThis month there were several changes I wanted to make to my daily habits, such as getting back into a good physical workout routine. One of my main problems previously was I only kept up my new workout routine for a few weeks before I would stop again. So, seeing this problem I went about build...","title":"A Fluttering Experience","date":"2020-11-18","author":"Zyrn","published":true,"tags":["mobile applications","flutter","dart","javascript","nodejs"],"content":"<style>\n    div.screenshot-image-view {\n        text-align: center;\n    }\n    div.screenshot-image-view img {\n        max-height: 600px;\n        padding: 2px;\n        border-radius: 40px;\n    }\n</style>\n<p>This month there were several changes I wanted to make to my daily habits, such as getting back into a good physical workout routine. One of my main problems previously was I only kept up my new workout routine for a few weeks before I would stop again. So, seeing this problem I went about building an app to do schedule reminders for various things, by sending push notifications straight to my phone.</p>\n<p>To develop this, I first started looking at different tools, frameworks, and languages for mobile (Android) development. One of my main criteria for selection was how simple the support to hand push notifications was going to be. In the end I decided on using applications framework which supports mobile and web using <a href=\"https://dart.dev/\">Dart</a>.</p>\n<div class=\"screenshot-image-view\">\n    <img src=\"/images/zyrn_notifications/home_screen.png\"/>\n    <img src=\"/images/zyrn_notifications/settings_screen.png\"/>\n</div>\n<p>Now that my frontend was decided, I need a backend and database, for this I used <a href=\"https://nodejs.org/\">Node.js</a> with <a href=\"https://expressjs.com/\">Express.js</a> and <a href=\"https://www.sqlite.org/index.html\">SQLite3</a> as there is good support for using Google’s services in Node.js namely their push notifications via <a href=\"https://firebase.google.com/\">Firebase</a>. SQLite3 was a lightweight SQL database which I had heard of and wanted to try out for a small project such as this. Combined I built a simplistic REST API with authentication via pre-shared tokens. This meant I could be more relaxed on security as I did not have to setup a whole authentication system and carefully ensure that there were no SQL injection vulnerabilities as I could choose who I distributed access to.</p>\n<p>While working on this I was able to start learning Dart, a new language to me while making a basic application which allowed me to subscribe to be notified about various topics when required.</p>\n<p>Overall a great learning experience, if you are interested in getting access to <a href=\"https://play.google.com/store/apps/details?id=dev.zyrn.notifications\">the app</a> or checking out the source code make sure to contact me.</p>\n<p>I’ll see you again next month, until then happy coding!</p>\n"},{"filename":"all-the-little-projects","preview":"Since my last update I haven't made all too much that I wanted to share, but I still wanted to share my month with you.\nI have continued to work with ray tracing and WebGL but I have sort of lost a bit of my motivation so I will be putting that project on hold.\nThis has kind of been the theme of ...","title":"All the Little Projects","date":"2020-09-19","author":"Zyrn","published":true,"tags":["docker","javascript","nodejs"],"content":"<p>Since my last update I haven't made all too much that I wanted to share, but I still wanted to share my month with you.</p>\n<p>I have continued to work with ray tracing and WebGL but I have sort of lost a bit of my motivation so I will be putting that project on hold.\nThis has kind of been the theme of the last month, starting a project losing interest and starting something else.</p>\n<p>After pressing pause on ray tracing I started to learn about a containerisation tool called <a href=\"https://www.docker.com/\">Docker</a>. After using the basic features I started learning how to use docker compose to build complex projects which could be set up on a new computer in minutes. This allows for very simple horizonal scaling applications, my first one of these was to get a <a href=\"https://www.mysql.com/\">MySQL</a> database running with <a href=\"https://expressjs.com/\">Express.js</a> web server which could send me simple reminder through a messaging platform called <a href=\"https://discord.com/\">Discord</a> using a API wrapper called <a href=\"https://discord.js.org/\">Discord.js</a>.</p>\n<p>My goal for this project was to be able to set and send reminders for myself of when I should go to bed, along with other reminders I or my friends might need.\nI was able to get a base application and framework setup, but lost interest on this after I built out the initial features.\nFollowing this I worked on a bunch of little programs, the most notable of the bunch being a parser/lexer in Rust for my langauge, a project I have talked about previously on this blog.</p>\n<p>All in all, this was a pretty light month for my hobby projects, but I was able to learn some key skills in using Docker.</p>\n<p>Can't wait to show you what I do next month!</p>\n"},{"filename":"compilers-and-web-applications","preview":"Over the last month I have been working on a lot more offline projects specifically, I have been working on lexical analysis engines for a different use cases. Some examples of these are my own basic programming language, a low level assemble compiler for a virtual CPU and a query language for a ...","title":"Compilers & Web-Applications","date":"2020-07-18","author":"Zyrn","published":true,"tags":["web","javascript","react","nodejs","rust","docker","language development"],"content":"<p>Over the last month I have been working on a lot more offline projects specifically, I have been working on lexical analysis engines for a different use cases. Some examples of these are my own basic programming language, a low level assemble compiler for a virtual CPU and a query language for a distributed processing engine.</p>\n<p>These projects were mainly designed to practice my ability to solve some difficult string processing problems, esspically in Rust. Most of these attempts focused on the tokenising and building language trees, however, I am taking a on pausing these projects for the time being as I need to do some more work in learning the theory of these components. I have already started to read through the <a href=\"https://en.wikipedia.org/wiki/Compilers:_Principles,_Techniques,_and_Tools\">'Dragon Book'</a>.</p>\n<p>Since I have hit a bit of a wall while trying to design and implement a compiler, I am currently working on building a basic web application template. This template system uses a variety of tools to allow me to get a brand-new idea ready for deployment much quicker. To build it I am using <a href=\"https://nextjs.org/\">Next.js</a> for the front-end and API, <a href=\"https://www.mongodb.com/\">MongoDB</a> for the data storage and <a href=\"https://auth0.com/\">Auth0</a> for user management and authentication.</p>\n<p>I am planning on using this template to build some admin dashboard and similar applications, and currently I have early version of this site available for testing on <strike><a href=\"https://admin.zyrn.dev\">admin.zyrn.dev</a></strike> (removed, contact <a href=\"mailto:mitch@zyrn.dev\">me</a> for a preview if desired). Additionally, during the last month I checked out a lot of other web applications and frameworks, with a significant amount of time used to setup a few different Django projects.</p>\n<p>As always, I look forward to seeing you in a month or so for my next development update!</p>\n"},{"filename":"web-apps-in-a-box","preview":"It has been a bit over a month since my last post and I have managed to get some good progress on some new projects.\nSince I last made a post, I have put a few more hours into my language, but since progress was slow I decided to tackle a task which I could make quick progress in and be proud of....","title":"Web Applications in a Box","date":"2020-10-26","author":"Zyrn","published":true,"tags":["web","javascript","react","nodejs","rust","docker","graphql"],"content":"<p>It has been a bit over a month since my last post and I have managed to get some good progress on some new projects.</p>\n<p>Since I last made a post, I have put a few more hours into my language, but since progress was slow I decided to tackle a task which I could make quick progress in and be proud of. One the main goals for this project was to design an application using the docker ecosystem and build it entirely in docker containers. For now I will be sticking to design architectures I am more comfortable with splitting the functionality into a UI layer (Next.js w/React), Business Logic Layer (Express.js, Passport.js, etc) and a data layer (MongoDB, GraphQL, Apollo, etc) rather than trying to branch out to a more heavily micro-services based architecture.</p>\n<p>As I alluded to earlier, I was trying to quick progress on this project rather than building everything by hand, so my tech list reads a bit like current treads buzzword list.</p>\n<p><strong>Front End</strong></p>\n<ul>\n<li>Next.js</li>\n<li>React.js</li>\n<li>Apollo (GraphQL Client)</li>\n</ul>\n<p><strong>Back End</strong></p>\n<ul>\n<li>Express.js</li>\n<li>Passport.js (authentication)</li>\n<li>NodeMailer.js (mail)</li>\n<li>Mongoose.js (database client)</li>\n<li>Express-GraphQL (GraphQL server)</li>\n</ul>\n<p><strong>Data</strong></p>\n<ul>\n<li>MongoDB</li>\n<li>Apollo (client-side caching)</li>\n<li>GraphQL (schema &#x26; query design)</li>\n</ul>\n<p><strong>Management</strong></p>\n<ul>\n<li>Nginx (Web Server)</li>\n<li>Mongo Express (Database Web Client)</li>\n</ul>\n<p>This project was designed to be a base application for various purposes so as such it has a generic front-end template and the ability so simply add more data and functionality on the back-end. The database is highly flexibly too. In addition to these design choices I have added features to assist with user management, identification, authorisation and well as emailing. Furthermore, I have allowed many settings to be customised at environment to allow for a single application to be setup for many different clients with no changes to the codebase.</p>\n<p>If you are interest in seeing what I currently have check out an example page <a href=\"https://example.zyrn.dev\">here</a>. Also, you will probably here a bit more about this project in the future as I have a client for whom I will be using this framework to develop their solution. This will help me better flesh out the core features for this framework.</p>\n<p>I hope to have tons of cool stuff to share next month, so until then I will be working hard on this.</p>\n"}]}},"__N_SSG":true}