{"pageProps":{"tag":{"name":"algorithms","posts":[{"filename":"a-coding-season","preview":"This month has been mostly comprised of holiday preparation and lots of time doing my daily challenge on Advent of Code 2020. This advent challenge gives you a sequence of challenges each harder than the last to do from December 1st until Christmas Day, providing a coherent story to drive the pro...","title":"A Coding Season","date":"2020-12-19","author":"Zyrn","published":true,"tags":["Advent of Code","rust","data structures","algorithms"],"content":"<p>This month has been mostly comprised of holiday preparation and lots of time doing my daily challenge on <a href=https://adventofcode.com/2020>Advent of Code 2020</a>. This advent challenge gives you a sequence of challenges each harder than the last to do from December 1st until Christmas Day, providing a coherent story to drive the progression.</p>\n<p>Each challenge can take anywhere from 20 minutes to a few hours to solve both parts of. This year I decided to take the challenge in <a href=\"https://www.rust-lang.org/\">Rust</a> which helped me to greatly gain a depth of knowledge in this language as I used many different data structures and algorithms.</p>\n<p>Rust allowed for some very clean solutions with both its advanced iterator support and operator overloading for structs (Rust's take on OOP).\nFor example, look at the simplicity of <a href=\"https://adventofcode.com/2020/day/3\">day 3</a>'s solutions with the structs and operator overloading removed.</p>\n<div class=\"remark-highlight\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">part1</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> map <span class=\"token operator\">=</span> <span class=\"token class-name\">Grid</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Number of trees: {}\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span>map<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Point</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">part2</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> map <span class=\"token operator\">=</span> <span class=\"token class-name\">Grid</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> paths <span class=\"token operator\">=</span> <span class=\"token macro property\">vec!</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">Point</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> results <span class=\"token operator\">=</span> paths<span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>p<span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span>map<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Number of trees: {}\"</span><span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span><span class=\"token function\">fold</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>total<span class=\"token punctuation\">,</span> val<span class=\"token closure-punctuation punctuation\">|</span></span> total <span class=\"token operator\">*</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">execute</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">:</span> <span class=\"token operator\">&#x26;</span><span class=\"token class-name\">Grid</span><span class=\"token punctuation\">,</span> direction<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">usize</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> pos <span class=\"token operator\">=</span> <span class=\"token class-name\">Point</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">while</span> pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&#x3C;</span> grid<span class=\"token punctuation\">.</span>dimensions<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">{</span>\n        pos <span class=\"token operator\">=</span> pos <span class=\"token operator\">%</span> grid<span class=\"token punctuation\">.</span>dimensions<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> grid<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n            counter <span class=\"token operator\">=</span> counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// println!(\"Char: {}, X: {}, Y: {}\", grid.map[pos.y][pos.x], pos.x, pos.y);</span>\n        pos <span class=\"token operator\">=</span> pos <span class=\"token operator\">+</span> direction<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    counter\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><br></br>\nWhile other times, mutability issues and the minimum string manipulation tools resulted in string parsing looking like this unreadable and slow code taken from my <a href=\"https://adventofcode.com/2020/day/7\">day 7</a> solution:</p>\n<div class=\"remark-highlight\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">part1</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> rules<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>bag<span class=\"token closure-punctuation punctuation\">|</span></span> bag<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"contain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">&#x26;</span><span class=\"token keyword\">str</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>bag<span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token punctuation\">(</span>bag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> bag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">)</span><span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>s<span class=\"token closure-punctuation punctuation\">|</span></span> s<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\">// .map(|(style, list)| { style.clone().split_off(style.len()-5); (style, list.iter().map(|s| { s.split_off(s.len()-5); s }).collect::&#x3C;Vec&#x3C;&#x26;String>>()) })</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> rules<span class=\"token punctuation\">.</span><span class=\"token function\">iter_mut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        style<span class=\"token punctuation\">.</span><span class=\"token function\">split_off</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span>style <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> style <span class=\"token keyword\">in</span> children<span class=\"token punctuation\">.</span><span class=\"token function\">iter_mut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            style<span class=\"token punctuation\">.</span><span class=\"token function\">split_off</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">*</span>style <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">let</span> rules<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">&#x26;</span><span class=\"token class-name\">String</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> rules<span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">)</span><span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>s<span class=\"token closure-punctuation punctuation\">|</span></span> s <span class=\"token operator\">!=</span> <span class=\"token operator\">&#x26;</span><span class=\"token string\">\"no other\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">&#x26;</span><span class=\"token class-name\">String</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> rules<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">usize</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> rules<span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">)</span><span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>style<span class=\"token punctuation\">,</span> children<span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>style<span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> items <span class=\"token operator\">=</span> style<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">&#x26;</span><span class=\"token keyword\">str</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">usize</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">usize</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> root <span class=\"token operator\">=</span> <span class=\"token function\">build_tree</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&#x26;</span>rules<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> matches <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>child<span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token function\">tree_contains</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> <span class=\"token operator\">&#x26;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shiny gold\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&#x3C;</span><span class=\"token class-name\">Vec</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">&#x26;</span><span class=\"token class-name\">Node</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}\"</span><span class=\"token punctuation\">,</span> matches<span class=\"token punctuation\">.</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Overall, this gave me a great opportunity to dive deeper into Rust and practice solve complex problems.</p>\n<p>Additionally, as you might have noticed in this post, I have added syntax highlighted code snippets to this website using <a href=\"https://prismjs.com/\">Prism.js</a>. So hopefully I will be able to do some post where I get into the details of my code a little more.</p>\n<p>See you next year with my January update!</p>\n"},{"filename":"ray-tracing","preview":"\nJust a quick note beforehand, I didn’t write up this post when I was working on this, so I have actually back dated this post to when I was working on it.\nSo another month has gone by and you must be wondering what have I been doing in all that time?\nRaytracing.\nWhat does that look like?\nIt look...","title":"Simple Ray Tracing","date":"2020-08-14","author":"Zyrn","published":true,"tags":["python","computer graphics","algorithms"],"content":"<style>\n    div.screenshot-image-view {\n        display: flex !important;\n        flex-direction: row;\n        flex-wrap: wrap;\n        align-items: stretch;\n        justify-content: center;\n        text-align: center;\n    }\n    \n    div.screenshot-image-view img {\n        max-width: 48%;\n        min-width: 350px;\n        padding: 2px;\n        border-radius: 10px;\n    }\n</style>\n<p>Just a quick note beforehand, I didn’t write up this post when I was working on this, so I have actually back dated this post to when I was working on it.</p>\n<p>So another month has gone by and you must be wondering what have I been doing in all that time?</p>\n<p><strong>Raytracing.</strong></p>\n<p>What does that look like?<br/>\nIt looks like this.</p>\n<img src=\"/images/ray_tracing/full_scene_4000x2000_100spp.png\" style=\"width: 100%; border-radius: 50px;\"/>\n<p>Now hopefully, after looking at that you think that it is as awesome as I thought it was seeing it the first time. Luckily, this was one of my projects I was able to work with a friend on. Together we worked through an amazing free book by Peter Shirley called <a href=\"https://raytracing.github.io/books/RayTracingInOneWeekend.html\">‘Ray Tracing in One Weekend’</a>. Following this tutorial we got a very simple tracing simulation going in Python in just one weekend as advertised. Once we completed this I did a bunch of renders of various scenes, so here are some final pictures and pictures from development.</p>\n<div class=\"screenshot-image-view\">\n    <img src=\"/images/ray_tracing/ray_collisions.jpg\"/>\n    <img src=\"/images/ray_tracing/scenes.png\"/>\n    <img src=\"/images/ray_tracing/shadows_no_aa.png\"/>\n    <img src=\"/images/ray_tracing/materials_and_aa.png\"/>\n</div>\n<p>The main issue with this version of our ray tracing is it was very slow so I have just started to work on an implementation for the browser using WebGL to get utilize GPU compute for this expensive workload.\n<br/> (Reminder you can open the images to get a full size render)</p>\n<p>Once again stay tuned for next month’s update!</p>\n"}]}},"__N_SSG":true}